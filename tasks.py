tasksForVangersPython  = [
    '1. Напишите программу, которая выводит на экран фразу "Привет, мир!"',
    '2. Напишите программу, которая складывает два числа и выводит результат.',
    '3. Напишите программу, которая находит сумму чисел от 1 до 10.',
    '4. Напишите программу, которая выводит таблицу умножения для числа 5.',
    '5. Напишите программу, которая определяет, является ли число четным или нечетным.',
    '6. Напишите программу, которая находит наибольшее число из трех заданных.',
    '7. Напишите программу, которая проверяет, является ли заданная строка палиндромом.',
    '8. Напишите программу, которая находит среднее арифметическое чисел в списке.',
    '9. Напишите программу, которая находит факториал заданного числа.',
    '10. Напишите программу, которая находит наименьший общий делитель двух чисел.',
    '11. Напишите программу, которая сортирует список чисел по возрастанию.',
    '12. Напишите программу, которая находит сумму цифр заданного числа.',
    '13. Напишите программу, которая переводит заданную фразу на русский язык.',
    '14. Напишите программу, которая определяет, является ли заданная строка палиндромом без использования встроенных функций.',
    '15. Напишите программу, которая находит все простые числа в заданном диапазоне.',
    '16. Напишите программу, которая определяет, является ли заданное число степенью двойки.',
    '17. Напишите программу, которая находит наименьшее общее кратное двух чисел.',
    '18. Напишите программу, которая подсчитывает количество слов в заданном тексте.',
    '19. Напишите программу, которая находит сумму всех четных чисел в заданном списке.',
    '20. Напишите программу, которая находит все делители заданного числа.',
    '21. Напишите программу, которая переводит заданную фразу на латинский язык.',
    '22. Напишите программу, которая проверяет, является ли заданное число палиндромом.',
    '23. Напишите программу, которая находит наименьший простой делитель заданного числа.',
    '24. Напишите программу, которая определяет, является ли заданная строка анаграммой другой строки.',
    '25. Напишите программу, которая находит сумму всех чисел Фибоначчи до заданного числа.',
    '26. Напишите программу, которая определяет, является ли заданное число совершенным.',
    '27. Напишите программу, которая переворачивает заданную строку.',
    '28. Напишите программу, которая находит наибольший общий делитель двух чисел.',
    '29. Напишите программу, которая определяет, является ли заданное число простым.',
    '30. Напишите программу, которая находит сумму нечетных чисел в заданном диапазоне.',
    '31. Напишите программу, которая определяет, является ли заданная строка панграммой.',
    '32. Напишите программу, которая проверяет, является ли заданная строка анаграммой палиндрома.',
    '33. Напишите программу, которая находит наибольшую цифру в заданном числе.',
    '34. Напишите программу, которая считает количество гласных букв в заданной строке.',
    '35. Напишите программу, которая определяет, является ли заданное число квадратом другого числа.',
    '36. Напишите программу, которая находит первую неповторяющуюся букву в заданной строке.',
    '37. Напишите программу, которая проверяет, является ли заданное число числом Армстронга.',
    '38. Напишите программу, которая находит сумму цифр в заданной строке.',
    '39. Напишите программу, которая находит самую длинную последовательность одинаковых чисел в заданном списке.',
    '40. Напишите программу, которая проверяет, является ли заданная фраза панграммой.',
    '41. Напишите программу, которая считает количество прописных и строчных букв в заданной строке.',
    '42. Напишите программу, которая находит наибольшую сумму двух соседних чисел в заданном списке.',
    '43. Напишите программу, которая проверяет, является ли заданное число числом Фибоначчи.',
    '44. Напишите программу, которая проверяет, является ли заданная фраза палиндромом без использования встроенных функций.',
    '45. Напишите программу, которая находит все перестановки заданной строки.',
    '46. Напишите программу, которая находит разницу между суммой четных и нечетных чисел в заданном списке.',
    '47. Напишите программу, которая проверяет, является ли заданное число совершенным квадратом.',
    '48. Напишите программу, которая определяет, является ли заданная строка полиндромом.',
    '49. Напишите программу, которая находит сумму всех чисел между двумя заданными числами.',
    '50. Напишите программу, которая удаляет все повторяющиеся элементы из заданного списка.',
    '51. Напишите программу, которая определяет, является ли заданная строка изограммой.',
    '52. Напишите программу, которая находит все числа Армстронга в заданном диапазоне.',
    '53. Напишите программу, которая считает сумму всех цифр в заданном списке чисел.',
    '54. Напишите программу, которая проверяет, является ли заданное число палиндромом без использования строковых операций.',
    '55. Напишите программу, которая находит все пифагоровы тройки в заданном диапазоне.',
    '56. Напишите программу, которая определяет, является ли заданная строка анаграммой палиндрома без использования встроенных функций.',
    '57. Напишите программу, которая находит наименьшее общее кратное всех чисел в заданном списке.',
    '58. Напишите программу, которая определяет, является ли заданное число сильным числом.',
    '59. Напишите программу, которая находит все максимальные подстроки заданной строки.',
    '60. Напишите программу, которая находит наибольшую разность между двумя соседними',
]

tasksForBiburatsPython = [
    'Задание 2: Напишите программу, которая принимает на вход два числа и выводит их сумму, произведение и частное.',
    'Задание 3: Создайте программу, которая имитирует бросание двух шестигранных кубиков. Программа должна выводить количество очков, которое выпало на кубиках.',
    'Задание 4: Напишите функцию, которая принимает строку и возвращает новую строку, где все буквы “a” заменены на “A”, а все буквы “e” заменены на “E”.',
    'Задание 5: Напишите программу для создания словаря, содержащего информацию о странах и их столицах. Словарь должен быть отсортирован по названию страны.',
    'Задание 6: Создайте программу для нахождения всех простых чисел в диапазоне от 1 до 10 000.',
    'Задание 7: Напишите программу на Python для определения, является ли введенное число палиндромом.',
    'Задание 8: Создайте программу на Python, которая будет принимать введенную строку и выводить количество символов в ней.',
    'Задание 9: Создайте программу на Python, чтобы найти все делители заданного числа.',
    'Задание 10: Создайте программу Python, которая позволит пользователю ввести число и выведет факториал этого числа.',
    'Задание 11: Создайте программу на Python, позволяющую пользователю ввести имя и фамилию. Программа должна вывести приветствие, используя эти данные.',
    'Задание 12: Создайте программу на Python, которая выведет таблицу умножения для числа 7.',
    'Задание 13: Создайте программу на Python, которая проверяет, является ли число простым или составным.',
    'Задание 14: Создайте программу на Python, которая выводит все возможные перестановки цифр числа 6398.',
    'Задание 15: Создайте программу на Python, которая находит все простые числа в заданном диапазоне.',
    'Задание 16: Напишите программу Python для решения квадратного уравнения с двумя неизвестными.',
    'Задание 17: Создайте программу на Python, которая бы считывала числа до тех пор, пока сумма этих чисел не превысит 100, а затем выведите эти числа.',
    'Задание 18: Создайте игру “Угадай число”.Программа должна случайным образом выбирать число от 1 до 10, а пользователь должен его угадывать. В случае успеха программа должна поздравить пользователя с победой.',
    'Задание 19: Создайте генератор случайных чисел. Он должен генерировать числа от 0 до 99.',
    'Задание 20: Напишите программу на Python, которая вычисляет объем и площадь поверхности сферы',
    'Задание 21: Написать программу, которая бы принимала на вход число и определяла, является ли оно палиндромом (числом, которое читается одинаково слева направо и справа налево, например, 222, 5555, 1111111).',
    'Задание 22: Создать программу, которая имитировала бы подбрасывание монеты. При каждом подбрасывании программа должна выводить сторону монеты (орел или решка).',
    'Задание 23: Написать функцию, которая бы меняла местами две переменные.',
    'Задание 24: Написать программу для игры в крестики-нолики. Игрок 1 - крестики, игрок 2 - нолики.',
    'Задание 25: Создать игру “Виселица”. Игрок должен отгадать слово, программа дает подсказки, рисуя символы и части слова. Если игрок ошибается, программа рисует одну часть виселицы.',
    'Задание 26: Написать генератор паролей. Генератор должен генерировать пароли заданной длины, состоящие из букв, цифр и специальных символов.',
    'Задание 27: Создать программу для шифрования текста с помощью шифра Цезаря. Ключом является смещение.',
    'Задание 28: Написать программу на Python для сортировки списка чисел с использованием различных алгоритмов сортировки (сортировка пузырьком, сортировка вставками, быстрая сортировка, сортировка слиянием).',
    'Задание 29: Создать генератор случайных чисел, который бы генерировал числа в определенном диапазоне (например, от 1 до 50).',
    'Задание 30: Написать программу Python для игры “21 очко”. Игрок и крупье должны набирать карты, чтобы набрать 21 очко или ближе к этому.',
    'Задание 31: Создать программу на Python, которая могла бы найти сумму всех чисел от 1 до n.',
    'Задание 32: Написать игру “Змейка” на Python. Игрок управляет змейкой, собирает еду и избегает столкновений с препятствиями и самой собой.',
    'Задание 33: Создать калькулятор на Python, который мог бы выполнять основные математические операции (сложение, вычитание, умножение, деление, остаток от деления).',
    'Задание 34: Написать простую игру “Твистер” на Python с использованием модуля pygame.',
    'Задание 35: Создать программу Python, которая может принимать на вход строку и определить, является ли она палиндромом (“шалаш”, “потоп”, “мадам” и т.д.).',
    'Задание 36: Написать программу на Python для расчета площади круга и длины окружности, зная радиус.',
    'Задание 37: Создать игру на Python “Морской бой”. Игрок должен поразить корабли противника, стреляя по координатам сетки.',
    'Задание 38: Написать игру на Python “Угадай число”, где программа загадывает число, а игрок должен его угадать.',
    'Задание 39: Создать простой калькулятор на Python с функциями сложения, вычитания, умножения и деления.',
    'Задание 40: Написать игру Python “Сапер”. Игроку нужно открывать ячейки на поле и угадывать, где бомбы, основываясь на подсказках.',
    'Задание 41: Создать простую игру на Python “Крестики-нолики” с использованием графического интерфейса tkinter.',
    'Задание 42: Написать программу на Python для генерации случайных чисел в заданном интервале.',
    'Задание 43: Создать программу на Python для проверки числа на простоту.',
    'Задание 44: Написать игру на Python “Виселица” с использованием модуля random для генерации случайного слова.',
]

tasksForVangersHC = [
    '1. Создайте веб-страницу с заголовком и параграфом.',
    '2. Добавьте изображение на веб-страницу и центрируйте его с помощью CSS.',
    '3. Создайте список из неупорядоченных элементов с использованием тега \<ul\>.',
    '4. Сверстайте таблицу с несколькими строками и столбцами.',
    '5. Используя CSS, создайте форму с полями для ввода текста и кнопкой отправки.',
    '6. Создайте простую веб-страницу, содержащую гиперссылки на другие веб-страницы.',
    '7. Верстка блочных элементов: создайте несколько блоков с различными фоновыми цветами и выравниванием.',
    '8. Оформите текст на веб-странице с использованием различных шрифтов, размеров и цветов.',
    '9. Используя CSS, создайте анимированную кнопку.',
    '10. Создайте адаптивную веб-страницу, которая корректно отображается на устройствах с разными размерами экранов.',
    '11. Создайте макет формы с использованием сетки для выравнивания элементов.',
    '12. Используя CSS, добавьте анимацию при наведении курсора на элементы страницы.',
    '13. Создайте веб-страницу, используя flexbox для организации блоков на странице.',
    '14. Верстка меню навигации: создайте горизонтальное и вертикальное меню навигации на веб-странице.',
    '15. Создайте адаптивный слайдер изображений с использованием HTML и CSS.',
    '16. Используя HTML и CSS, создайте анимированный выпадающий список.',
    '17. Верстка карточек: создайте карточки с информацией о товарах или услугах, используя гриды или флексбокс.',
    '18. Создайте форму обратной связи с различными типами полей ввода и кнопкой отправки.',
    '19. Используя CSS, добавьте эффекты тени и округления углов к элементам на веб-странице.',
    '20. Создайте веб-страницу, содержащую медиа-запросы для адаптивной верстки под различные устройства.',
    '21. Используя HTML и CSS, создайте анимированный выпадающий бургер-меню для мобильных устройств.',
    '22. Верстка адаптивного блока новостей: создайте блок новостей, который корректно масштабируется на различных устройствах.',
    '23. Создайте анимированный прогресс-бар с использованием HTML и CSS.',
    '24. Используя CSS, создайте адаптивную веб-страницу с масштабируемыми фоновыми изображениями.',
    '25. Создайте форму для ввода данных с использованием валидации формы на стороне клиента средствами HTML.',
    '26. Создайте анимацию перехода (transition) для элементов на веб-странице с использованием CSS.',
    '27. Верстка тенистых эффектов: добавьте тени к элементам веб-страницы для придания глубины и объема.',
    '28. Создайте адаптивный слайдер с помощью библиотеки CSS, такой как Slick или Swiper.',
    '29. Используя HTML и CSS, реализуйте анимированный фон для веб-страницы.',
    '30. Создайте веб-страницу, содержащую "хлебные крошки" (breadcrumb navigation) для навигации по сайту.',
    '31. Создайте галерею изображений с применением CSS-сеток для их организации и отображения на веб-странице.',
    '32. Разработайте адаптивный макет страницы, используя CSS Grid для создания сложной сетки.',
    '33. Создайте анимацию "параллакса" на веб-странице, используя HTML и CSS.',
    '34. Верстка "лавандовой" формы: создайте красивую и современную форму в стиле "лавандовой" страницы.',
    '35. Используя CSS, создайте анимированный "выезжающий" баннер или информационное сообщение, которое появляется при загрузке веб-страницы.',
    '36. Создайте адаптивное меню "гамбургер" для мобильных устройств с использованием HTML, CSS и JavaScript.',
    '37. Верстка "карусельного" слайдера: разработайте адаптивную карусель для отображения контента или изображений на веб-странице.',
    '38. Создайте форму с использованием HTML5-элементов для ввода, таких как email, телефон и дата, с соответствующей валидацией.',
    '39. Используя CSS, добавьте анимированный "скролл" или "плавный" скроллинг для веб-страницы.',
    '40. Разработайте адаптивный макет страницы с использованием фреймворка Bootstrap или другого CSS-фреймворка.',
]

tasksForBiburatsHC = [
    '1. Создайте страницу с горизонтальным меню, используя HTML и CSS.',
    '2. Разработайте адаптивный макет для веб-страницы, используя CSS медиа-запросы.',
    '3. Примените CSS свойства float: left и float: right для выравнивания элементов.',
    '4. Используйте CSS свойство display: inline-block для вертикального выравнивания элементов.',
    '5. Изучите свойства CSS box-shadow и text-shadow для создания эффектов тени.',
    '6. Используйте свойство CSS opacity для создания прозрачных элементов.',
    '7. Измените цвет ссылок на вашей веб-странице с помощью свойства a:link.',
    '8. Используйте псевдоклассы :hover и :active для создания интерактивных элементов.',
    '9. С помощью CSS градиентов создайте плавные переходы между цветами.',
    '10. Изучите CSS свойство transform для создания различных эффектов анимации.',
    '11. Создайте простую анимацию на вашей веб-странице, используя CSS свойство transition.',
    '12. Используйте CSS переменные для стилизации элементов на вашей веб-странице.',
    '13. Создайте горизонтальное меню с выпадающим подменю, используя HTML и CSS.',
]

textBook = [
    'Python', 'HTML/CSS', 'C#'
]

pet_projects = [
    'Программа для управления проектами (ProjectManager) Определение: Программа, которая помогает пользователям управлять проектами, отслеживать прогресс, планировать задачи и координировать работу команды. Обязательные структуры: -Функция для создания и управления проектами, включая задачи, ресурсы и сроки. -Функция для отслеживания прогресса проектов и задач. Дополнительные структуры: -Модуль для интеграции с календарем и инструментами для планирования, что позволит пользователям синхронизировать проекты с их календарем и планировать задачи. -База данных для хранения информации о проектах, задачах и прогрессе, что позволит сохранять историю и обеспечивать доступность данных.',
    'Программа для автоматического создания отчетов (ReportGenerator) Определение: Программа, которая автоматически генерирует отчеты на основе данных из различных источников, таких как базы данных, файлы или API, предоставляя пользователям актуальную информацию в удобном формате. Обязательные структуры: -Функция для загрузки данных из различных источников. -Функция для анализа данных и формирования отчетов. Дополнительные структуры: -Модуль для работы с различными форматами данных и отчетов (например, Excel, PDF), что позволит программе генерировать отчеты в различных форматах. -База данных для хранения информации о заданиях на создание отчетов и истории созданных отчетов.',
    'Программа для управления личным бюджетом (BudgetManager) Определение: Программа, которая помогает пользователям отслеживать свои расходы и доходы, а также планировать бюджет, предоставляя инструменты для анализа финансовых данных. Обязательные структуры: -Функция для ввода и хранения данных о расходах и доходах. -Функция для расчета итогового баланса и прогнозирования бюджета. Дополнительные структуры: -Модуль для интеграции с банковскими API, что позволит автоматически обновлять данные о расходах и доходах. -База данных для хранения истории транзакций и информации о бюджете, что позволит сохранять историю и анализировать финансовые данные.',
    'Программа для автоматического тестирования (AutoTester) Определение: Программа, которая автоматически тестирует веб-приложения или API, проверяя их на соответствие требованиям и на наличие ошибок. Обязательные структуры: -Функция для создания тестовых сценариев, которые определяют, какие действия следует выполнить и какие результаты ожидать. -Функция для выполнения тестов, которая будет запускать тестовые сценарии и сравнивать полученные результаты с ожидаемыми. Дополнительные структуры: -Модуль для работы с API различных веб-сервисов, что позволит программе тестировать реальные веб-приложения. -База данных для хранения информации о тестах и результатов, что позволит анализировать и отслеживать прогресс тестирования.',
    'Программа для создания и управления задачами (TaskManager) Определение: Программа, которая позволяет пользователям создавать, отслеживать и управлять своими задачами, предоставляя инструменты для планирования и организации работы. Обязательные структуры: -Функция для создания задач, которая позволит пользователям добавлять новые задачи в систему. -Функция для отслеживания статуса задач, которая будет отображать текущий статус каждой задачи. Дополнительные структуры: -Модуль для интеграции с календарем (например, Google Calendar), что позволит пользователям синхронизировать задачи с их календарем. -База данных для хранения информации о задачах, что позволит сохранять историю задач и обеспечивать их доступность.',
    'Программа для мониторинга цен (PriceMonitor) Определение: Программа, которая отслеживает изменение  н на товары в интернете и уведомляет пользователя, когда цена достигает заданного уровня. Обязательные структуры: -Функция для отправки HTTP-запросов к сайтам-источникам, с которых планируется отслеживать цены. -Функция для сравнения цен, которая будет анализировать изменения цен и сравнивать их с заданными пользователем ценами. Дополнительные структуры: -Модуль для работы с API различных интернет-магазинов, что позволит программе получать актуальные данные о ценах. -База данных для хранения информации о товарах и ценах, что позволит отслеживать историю изменений цен.',
    'Программа для анализа данных (DataAnalyzer) Определение: Программа, которая может анализировать и визуализировать данные из различных источников, предоставляя пользователю полезные инсайты и отчеты. Обязательные структуры: -Функция для загрузки данных из различных источников, например, из файлов, баз данных или API. -Функция для анализа данных, которая будет выполнять различные статистические и математические операции. Дополнительные структуры: -Модуль для работы с различными форматами данных (CSV, JSON, Excel), что позволит программе обрабатывать широкий спектр источников данных. -Инструменты для визуализации данных (например, Matplotlib, Seaborn), что позволит создавать графики и диаграммы для лучшего понимания данных.',
    'Программа для автоматизации задач (TaskAutomator) Определение: Программа, которая может автоматизировать повторяющиеся задачи, такие как отправка электронных писем, загрузка файлов на облачное хранилище и т.д., используя различные API и сервисы. Обязательные структуры: -Основной цикл для выполнения задач, который будет планировать и выполнять задачи в заданное время. -Функции для выполнения конкретных задач, например, отправка электронной почты или загрузка файлов. Дополнительные структуры: -Модуль для работы с API различных сервисов (например, Gmail, Dropbox), что позволит программе взаимодействовать с внешними сервисами. -База данных для хранения информации о выполненных задачах, что позволит отслеживать прогресс и историю выполнения задач.',
    'Простой веб-сервер (SimpleWebServer) Определение: Программа, которая может обрабатывать HTTP-запросы и отвечать на них, предоставляя пользователям доступ к веб-ресурсам. Обязательные структуры: -Основной цикл для прослушивания входящих запросов, который будет слушать определенный порт и обрабатывать входящие соединения. -Функция для обработки запросов и формирования ответов, которая будет анализировать запросы и отправлять соответствующие ответы. Дополнительные структуры:- Модуль для работы с статическими файлами (например, HTML, CSS, JavaScript), что позволит серверу отдавать веб-страницы. -Поддержка маршрутизации для обработки различных URL, что позволит создавать более сложные веб-приложения.',
    'Веб-скрейпер (WebScraper) Определение: Программа, которая автоматически извлекает данные из веб-страниц, анализируя HTML-код страниц и извлекая нужную информацию. Обязательные структуры: -Функция для отправки HTTP-запросов к веб-сайтам, с которыми планируется работать. -Парсер для обработки HTML-страниц, который будет извлекать нужные данные. Дополнительные структуры: -Модуль для работы с API, если доступ к определенным данным возможен только через API. -База данных для хранения извлеченных данных, что позволит легко анализировать и использовать собранную информацию.',
    'Бот для чата (ChatBot) Определение: Программа, которая может автоматически отвечать на сообщения пользователей в чате, используя предварительно заданные сценарии или обучаясь на основе предыдущих диалогов. Обязательные структуры: -Основной цикл для обработки сообщений, который будет слушать входящие сообщения и отправлять ответы. -Функция для обработки входящих сообщений, которая будет анализировать текст сообщения и определять, какой ответ следует отправить. Дополнительные структуры: -База данных для хранения истории чата, что позволит боту учиться на основе прошлых диалогов. -Модуль для интеграции с различными платформами чата (например, Telegram, Discord), что позволит расширить возможности бота.',
]

task_for_theme_1 = [
    'Запросите у пользователя его имя и выведите в консоль',
    'Введите 2 переменные (целочисленные), выведите в консоль сложение, вычитание, умножение, деление, возведение в степень (1-ое на 2-ое)',
    'Объявите 3 переменные со значением 5,10,15 и выведите в консоль сумму этих переменных',
    'Введите 4 переменные (с плавающей точкой), выведите в консоль сложение (2 на 3), вычитание (1 на слож(2,3)), деление (выч(1 на слож(2,3)) на сложение), умножение (деление на сложение)',
    'Объявите 3 переменные (целочисленные) со значением 5, 10, 15 и выведите в консоль сложение, вычитание, умножение, деление каждых переменных (ab, bc, ac)'
]

task_for_theme_2 = [
    'Введите переменную, выведите в консоль сообщение "Число больше 10" если это так',
    'Введите 2 переменные (строки), выведите в консоль сообщение "Число a равно b" если это так, иначе "Число b не равно a"',
    'Введите 2 переменные (целочисленные) и выведите в консоль сообщение "Число b больше a", "Число b равно a", "Число b меньше a"',
    'Введите число от 1 до 7 и вывдите какому дню недели это число соответствует',
    'Введите число и выведите сообщение "Число больше 101" или "Число меньше или равно 101" (ваш вывод и условие должны умещаться в 1-у строку)'
]

task_for_theme_3 = [
    'Создайте список с именами ваших одногрупников, используйте цикл for чтобы вывести их имена (for)',
    'Введите число (целочисленное), и выведите все числа от 1 до введённого числа включительно (for)',
    'Введите число (целочисленное), и выведите все числа от 1 до введённого числа включительно (while)',
    'Введите число (целочисленное), и выведите все число от 1 до введённого числат включительно (for range)',
    'Создайте список с именами ваших одногрупников, используйте цикл for чтобы вывести их имена (while)'
]

task_for_theme_4 = [
    'Создайте список и добавьте в него названия фруктов, после чего выведите на экран',
    'Создайте список, заполните его числа от 1 до 100. Удалите каждое чётное число из списка',
    'Создайте список, со значение "Собака, Кошка, Слон" найдите его в списке и выведите порядковый номер',
    'Создайте список, заполните список числами и проверьте, если в нём число 5, результат выведите в консоль',
    'Создайте список, заполните его числами и сортируйте его, новый список выведите на экран'
]

task_for_theme_5 = [
    'Создайте функцию greet, которая принимает один аргумент name и выводит приветствие с использованием этого имени',
    'Создайте функцию is_even, которая принимает один аргумент number и возвращает True, если число четное, и False в противном случае.',
    'Создайте функцию sum_to_n, которая принимает один аргумент n и возвращает сумму всех чисел от 1 до n',
    'Создайте функцию greet_with_title, которая принимает два аргумента: name и title с параметром по умолчанию "господин"',
    'Создайте функцию calculate_area, которая принимает два аргумента: length и width и возвращает площадь прямоугольника'
]

task_for_theme_6 = [
    'Создайте словарь person с ключами name, age, и city, и соответствующими значениями',
    'Создайте пустой словарь fruits. Запросите у пользователя ввести имя фрукта и его цвет. Добавьте введенные данные в словарь fruits',
    'Создайте словарь animals со следующими парами ключ-значение: {"собака": "дог", "кошка": "кот"}. Запросите у пользователя ввести имя животного, которое нужно удалить. Удалите указанное животное из словаря.',
    'Создайте словарь grades со значениями 5, 4, 3, 2, 1. Запросите у пользователя ввести оценку. Используйте условный оператор для проверки, есть ли введенная оценка в словаре grades',
    'Создайте словарь products со следующими парами ключ-значение: {"масло": 100, "мука": 50, "яйца": 30}.'
]

theory_all = [
    'Функция print() Что такое функция в программировании, узнаем позже. Пока будем считать, что print() – это такая команда языка Python, которая выводит то, что в ее скобках на экран. Типы данных в программировании — это классификация данных, которые могут быть обработаны программой. Примитивные типы данных — это базовые типы данных, которые не могут быть разделены на более простые компоненты. Они включают: Целые числа (Integer): Например, int в Python, . Используются для хранения целых чисел, таких как 1, 2, 3. Числа с плавающей точкой (Floating-point numbers): Например, float в Python. Используются для хранения чисел с десятичной точкой, таких как 1.23, 3.14. Строки (Strings): Например, str в Python. Используются для хранения текстовых данных, например, "Hello, World!". Логические значения (Boolean): Например, bool в Python. Используются для хранения значений истина (true) или ложь (false).Объявление переменных в программировании — это процесс, в ходе которого программист указывает имя переменной и, возможно, ее тип данных, чтобы использовать ее в программе. Арифметические операторы в программировании используются для выполнения математических операций над числами. Основные арифметические операторы Сложение (+): Складывает два числа. Вычитание (-): Вычитает одно число из другого. Умножение (*): Умножает два числа. Деление (/): Делит одно число на другое. Остаток от деления (%): Возвращает остаток от деления одного числа на другое.',
    'Условные операторы в программировании используются для выполнения различных действий в зависимости от выполнения определенного условия. Основные условные операторы Если (if): Выполняет блок кода, если условие истинно. Если-Иначе (if-else): Выполняет один блок кода, если условие истинно, и другой блок кода, если условие ложно. Если-Иначе-Если (if elif else): Позволяет проверять несколько условий последовательно. Если условие истинно, выполняется соответствующий блок кода, и остальные условия не проверяются. Оператор Тернарного Условия (?:): Сокращенная форма условного оператора, позволяющая выполнить одно из двух выражений в зависимости от условия. Оператор match-case также известен как оператор структурного сопоставления с заданным шаблоном. Делает структуру сравнения более плавной. Используя match-case, вы указываете интересующее вас значение и задаете шаблоны (case) для каждого возможного результата. Затем код пытается сопоставить значение с шаблонами.',
    'Циклы в программировании — это структуры управления, которые позволяют повторять выполнение блока кода определенное количество раз или до тех пор, пока выполняется определенное условие. Основные типы циклов Цикл for: Используется для итерации по последовательности (например, списку, диапазону чисел) или коллекции. Цикл while: Выполняет блок кода, пока условие истинно. ',
    'Списки в программировании — это структуры данных, которые позволяют хранить коллекцию элементов в определенном порядке. Основные операции со списками Добавление элемента: Добавление нового элемента в список. Удаление элемента: Удаление элемента из списка. Поиск элемента: Поиск элемента в списке по значению или индексу. Итерация по списку: Проход по всем элементам списка для выполнения операций над ними. Обращение к элементу: Доступ к элементу списка по его индексу. Список кортежей — это список, элементами которого являются кортежи. Кортежи — это неизменяемые последовательности, что делает их идеальными для хранения данных, которые не должны изменяться. Список списков — это список, элементами которого являются другие списки. Это позволяет создавать многомерные структуры данных.',
    'Функции в программировании — это блоки кода, предназначенные для выполнения определенной задачи.По назначению: Процедурные функции: Эти функции выполняют действие, но не возвращают значение. Они часто используются для выполнения операций, таких как вывод на экран, запись в файл или изменение состояния программы. Функции с возвратом значения: Эти функции выполняют действие и возвращают результат. Они могут быть использованы для вычисления значений, преобразования данных или выполнения других операций, результаты которых нужны в дальнейшем. По области видимости:Глобальные функции: Функции, определенные вне любых классов или модулей, доступны для вызова из любой части программы. Локальные функции: Функции, определенные внутри других функций или методов класса, доступны только внутри области видимости, где они были определены. Статические методы: В объектно-ориентированном программировании статические методы принадлежат классу, а не экземпляру класса. По способу возврата значений: Функции с возвратом значения: Эти функции возвращают значение, которое может быть использовано в вызывающем коде. Функции без возврата значения: Эти функции выполняют действие, но не возвращают значение. В некоторых языках программирования, таких как Python, функции без явного возвращаемого значения по умолчанию возвращают None.',
    'Словари в программировании — это структуры данных, которые хранят пары ключ-значение. Они позволяют быстро и эффективно искать, добавлять, удалять и изменять значения по ключам. Словари являются неупорядоченными коллекциями, что означает, что порядок элементов не гарантируется. Основные операции со словарями Добавление элемента: Добавление новой пары ключ-значение в словарь. Удаление элемента: Удаление элемента из словаря по ключу. Поиск элемента: Поиск значения по ключу. Итерация по словарю: Проход по всем парам ключ-значение в словаре. Обращение к элементу: Доступ к значению по ключу.'
]